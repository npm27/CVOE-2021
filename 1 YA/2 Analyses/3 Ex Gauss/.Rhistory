ylab("Mean Task Performance") +
ylim(0,100)
#labs(title="All Blocks")
bar3
knitr::include_graphics("plot1.png")
citr:::insert_citation()
12.11*40
484.4*2
968.8*.15
968.8-145.32
823-110-50
85-22)
85-22
n = 100
dbinom(100)
dbinom(50, 100, 50)
dbinom(50, 100, 2)
dbinom(50, 100, .5)
dbinom(50, 100, .5)
round(data.frame(0:100, probs), digits = 5)
probs = dbinom(50, 100, .5)
round(data.frame(0:100, probs), digits = 5)
plot(0:100, probs, type="h", xlim=c(0,100), ylim=c(0,.1))
probs = dbinom(0:100, 100, .5) ##get the probability
round(data.frame(0:100, probs), digits = 5)
plot(0:100, probs, type="h", xlim=c(0,100), ylim=c(0,.1))
points(0:100, probs, pch=16, cex=.5)
curve(dnorm(x, mean=50, sd=5), from=0, to=100, xlim = c(0, 100), ylim = c(0, 0.5), xlab = "x", add=T, col="blue")
sum(dbinom(45:55, size=100, prob=1/2))
sum(dbinom(50, size=100, prob=1/2))
length(probs)
probs = as.data.frame(probs)
subset(probs, Mod(probs$probs) == 0)
View(probs)
head = 1
tail = 0
prob = e
e
e = exp(1)
sample(c("Heads", "Tails"), n, rep = T)
Flip1Coin = function(n) sample(c("Heads", "Tails"), n, rep = T)
Flip1Coin(n)
sample(c("Heads", "Tails"), n, rep = T)
sample(c("Heads", "Tails"), n, rep = 100)
Flip1Coin = function(n) sample(c("Heads", "Tails"), n, rep = 100)
Flip1Coin(n)
sample(c("Heads", "Tails"), n, rep = 100)
Flip1Coin = sample(c("Heads", "Tails"), n, rep = 100)
pbinom(50, 100, .5)
dbinom(50, 100, .5)
dnorm(50)
dnorm(50/sqrt(24))
pbinom(50, size = 100, .5)
pbinom(48, size = 100, .5)
pbinom(52, size = 100, .5)
pbinom(71, size = 100, .5)
m = 100 * .5
sd1 = sqrt(100 * .5 *.5)
1 - dnorm(50, mean = m, sd = sd1)
1 - pnorm(50, mean = m, sd = sd1)
x = c(0:100)
length(x)
mod(x, 2)
Mod(x)
Mod(x, 2)
.5*10
.75*7.5
.6*7.5
.7*7.5
.65*7.5
.68*7.5
.625*7.5
.667*7.5
.667*5
.667*4
.667*4.25
.667*8
.6 *8
.62 *8
.63 *8
.625 *8
.625 * 4
25*60
1500/5
install.packages("installr")
installr::installr()
library(ez)
library(reshape)
devtools::install_github("npm27/lrd")
devtools::install_github("npm27/lrd")
devtools::install_github("npm27/lrd")
shiny::runApp('GitHub/lrd/shiny')
shiny::runApp('lrdSHINY')
runApp('lrdSHINY')
runApp('lrdSHINY')
setwd("~/GitHub/CVOE-2021/1 YA/2 Analyses/3 Ex Gauss")
setwd("~/GitHub/CVOE-2021/1 YA")
setwd("~/GitHub/CVOE-2021")
##Install retimes from archive
url = "https://cran.r-project.org/src/contrib/Archive/retimes/retimes_0.1-2.tar.gz"
pkgFile = "retimes_0.1-2.tar.gz"
download.file(url = url, destfile = pkgFile)
install.packages(pkgs=pkgFile, type="source", repos=NULL)
unlink(pkgFile)
library(devtools)
install.packages("rtools")
install.packages("Rtools")
setwd("~/")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
4.5+4.5+4.5+6+4.5+4.5
28.5*12.5
setwd("~/GitHub/CVOE-2021/1 YA/2 Analyses/3 Ex Gauss")
####Ex-guass analysis####
##set up
#libraries
library(ez)
library(reshape)
####ANALYZE TRIAL TYPES####
dat.trial = read.csv("ex_gauss_trials.csv")
ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
options(scipen = 999)
####ANALYZE TRIAL TYPES####
dat.trial = read.csv("ex_gauss_trials.csv")
ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1 = ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
model1 = ezANOVA(data = dat.trial,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
model1
tapply(dat.trial$Score, dat.trial$trial, mean)
tapply(dat.trial$Score, dat.trial$parameter, mean)
tapply(dat.trial$Score, list(dat.trial$parameter, dat.trial$trial, mean)
tapply(dat.trial$Score, list(dat.trial$parameter, dat.trial$trial), mean)
tapply(dat.trial$Score, list(dat.trial$parameter, dat.trial$trial), mean)
##Do some subsetting
mu = subset(dat.trial,
dat.trial$parameter == "mu")
sigma = subset(dat.trial,
dat.trial$parameter == "sigma")
tau = subset(dat.trial,
dat.trial$parameter == "tau")
#mu
model1 = ezANOVA(data = mu,
wid = ID,
within = .(trial, parameter),
dv = Score,
type = 3,
detailed = T) #everything is significant!
#mu
model1 = ezANOVA(data = mu,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
model1
model1
View(mu)
#post-hoc
posthoc1 = cast(mu, id ~ trial, mean)
#post-hoc
posthoc1 = cast(mu, ID ~ trial, mean)
View(posthoc1)
#pure
temp = t.test(posthoc1$pure, posthoc1$alt_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
tapply(dat.trial$Score, list(dat.trial$parameter, dat.trial$trial), mean)
temp = t.test(posthoc1$pure, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$pure, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$pure, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#alt ns
temp = t.test(posthoc1$alt_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #NS
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
##get pbic
pbic = subst(mu,
mu$trial == "rand_ns" | mu$trial == "alt_ns")
##get pbic
pbic = subset(mu,
mu$trial == "rand_ns" | mu$trial == "alt_ns")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#alt ns
temp = t.test(posthoc1$alt_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$pure, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$pure, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#pure
temp = t.test(posthoc1$pure, posthoc1$alt_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
##get cohen's d
mean(posthoc1$alt_ns)
##get cohen's d
mean(posthoc1$alt_ns);mean(posthoc1$rand_switch)
sd(posthoc1$alt_ns);sd(posthoc1$rand_switch)
##SIGMA
model1 = ezANOVA(data = sigma,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
model1
model1
#post-hoc
posthoc1 = cast(sigma, ID ~ trial, mean)
#pure
temp = t.test(posthoc1$pure, posthoc1$alt_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
#alt ns
temp = t.test(posthoc1$alt_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #NS
##get pbic
pbic = subset(mu,
mu$trial == "rand_ns" | mu$trial == "alt_ns")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
temp = t.test(posthoc1$alt_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
##get cohen's d
mean(posthoc1$alt_ns);mean(posthoc1$rand_switch)
sd(posthoc1$alt_ns);sd(posthoc1$rand_switch)
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
##get pbic
pbic = subset(sigma,
sigma$trial == "alt_switch" | mu$trial == "rand_switch")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#pure
temp = t.test(posthoc1$pure, posthoc1$alt_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
#alt ns
temp = t.test(posthoc1$alt_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
##get cohen's d
mean(posthoc1$rand_ns);mean(posthoc1$alt_switch)
sd(posthoc1$rand_ns);sd(posthoc1$alt_switch)
##TAU
model1 = ezANOVA(data = tau,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
model1
#post-hoc
posthoc1 = cast(tau, ID ~ trial, mean)
#pure
temp = t.test(posthoc1$pure, posthoc1$alt_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$pure, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
#alt ns
temp = t.test(posthoc1$alt_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #sig
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
temp = t.test(posthoc1$alt_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
#rand ns
temp = t.test(posthoc1$rand_ns, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #marginal
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #non-sig
##get cohen's d
mean(posthoc1$rand_ns);mean(posthoc1$alt_switch)
sd(posthoc1$rand_ns);sd(posthoc1$alt_switch)
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
temp = t.test(posthoc1$rand_ns, posthoc1$alt_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
temp = t.test(posthoc1$alt_ns, posthoc1$rand_ns, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92  #.03
mean(posthoc1$alt_ns); mean(posthoc1$rand_ns)
#get d
mean(posthoc1$alt_ns); mean(posthoc1$rand_ns)
sd(posthoc1$alt_ns); sd(posthoc1$rand_ns)
#alt switch
temp = t.test(posthoc1$alt_switch, posthoc1$rand_switch, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
##get pbic
pbic = subset(sigma,
sigma$trial == "alt_switch" | mu$trial == "rand_switch")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
##get pbic
pbic = subset(tai,
tau$trial == "alt_switch" | tau$trial == "rand_switch")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
##get pbic
pbic = subset(tau,
tau$trial == "alt_switch" | tau$trial == "rand_switch")
ezANOVA(data = pbic,
wid = ID,
within = trial,
dv = Score,
type = 3,
detailed = T) #everything is significant!
800/3000
